@import '../../shared/styles/variables';
$lines-width: 1px;
$bullet-size: 1px;
$cell-spacing: 25px;
$cell-padding: 10px;
$bullet-margin: 10px;
$line-border: $lines-width solid $tree-lines-color;
$line-border-erase: ($lines-width + 1px) solid #fff;

$param-name-height: 20px;

$sub-schema-offset: ($bullet-size / 2) + $bullet-margin;

.param-name {
  position: relative;
  border-left: $line-border;
  padding: $cell-padding 0;
  vertical-align: top;
  line-height: $param-name-height;

  white-space: nowrap;
  font-size: 0.929em;
  font-weight: $regular;

  box-sizing: border-box;
}

.param-name-wrap {
  display: inline-block;
  padding-right: $cell-spacing;
  font-family: $headers-font, $headers-font-family;
}

.param-info {
  border-bottom: 1px solid #ccc;
  padding: $cell-padding 0;
  width: 75%;
  line-height: 1em;

  box-sizing: border-box;
}

.param-range {
  position: relative;
  top: 1px;
  margin-right: 6px;
  margin-left: 6px;
  border-radius: $border-radius;
  background-color: rgba($primary-color, .1);
  padding: 0 4px;
  color: rgba($primary-color, 0.7);
}

.param-description {
  font-size: 13px;
}

.param-required {
  vertical-align: middle;
  line-height: $param-name-height;
  color: #f00;
  font-size: 12px;
  font-weight: bold;
}

.param-type {
  vertical-align: middle;
  line-height: $param-name-height;
  color: rgba($black, 0.4);
  font-size: 0.929em;
  font-weight: normal;
}

.param-type.array:before {
  content: "Array of ";
  color: $black;
  font-weight: $base-font-weight;
}

.param-type.tuple:before {
  content: "Tuple";
  color: $black;
  font-weight: $base-font-weight;
}

.param-type.with-hint {
  display: inline-block;
  margin-bottom: 0.4em;
  border-bottom: 1px dotted rgba(38,50,56,0.4);
  padding: 0;
  cursor: help;
}

.param-type-trivial {
  display: inline-block;
}

.param-type-file {
  font-weight: bold;
  text-transform: capitalize;
}

/* tree */

// Bullet

.param-name > span:before {
  content: "";
  display: inline-block;
  width: $bullet-size;
  height: $bullet-size + 6;
  background-color: $primary-color;
  margin: 0 $bullet-margin;
  vertical-align: middle;
}

.param-name > span:after {
  content: "";
  position: absolute;
  border-top: $line-border;
  width: $bullet-margin;
  left: 0;
  top: ($param-name-height/2) + $cell-padding + 1;
}

 .param:first-of-type > .param-name:before {
  content: "";
  display: block;
  position: absolute;
  left: -$lines-width;
  top: 0;
  border-left: $line-border-erase;
  height: ($param-name-height/2) + $cell-padding + 1;
}

.param:last-of-type > .param-name, .param.last > .param-name {
  position: relative;

  &:after {
    content: "";
    display: block;
    position: absolute;
    left: -$lines-width - 1px;
    border-left: $line-border-erase;
    top: ($param-name-height/2) + $cell-padding + $lines-width + 1;
    background-color: white;
    bottom: 0;
  }
}

.param-wrap:last-of-type > .param-schema {
  border-left-color: transparent;
}

.param-schema .param-wrap:first-of-type .param-name:before {
  display: none !important;
}

.param-schema.last > td {
  border-left: 0;
}

.param-enum {
  color: $text-color;
  font-size: 13px;

  &:before {
    content: 'Values: {';
  }

  &:after {
    content: '}';
  }

  > .enum-value {
    &:after {
      content: ", ";
    }

    &:last-of-type:after {
      content: none;
    }
  }
}
